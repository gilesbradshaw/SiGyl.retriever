(function(){requirejs.config({baseUrl:"../scripts",map:{"*":{ko:"knockout"}},shim:{breeze:["Q","jquery","knockout"]},paths:{linq:"linqjs-amd",sinon:"sinon-1.9.1",Q:"q",jquery:"jquery-2.1.1",retriever:"app/retriever",breeze:"breeze.debug",knockout:"knockout-3.2.0",breezeretriever:"App/BreezeRetriever"}});require(["linq","retriever","Q","breeze","breezeretriever","sinon"],function(c,e,d,a,b){QUnit.test("check linq",function(f){return f.ok(c,"linq installed")});QUnit.test("check sinon",function(f){return f.ok(sinon,"sinon installed")});QUnit.test("handles change and delete data callbacks from source",sinon.test(function(f){var g,h,i,j;i={on:sinon.spy()};j={changeData:sinon.stub().returns("stored data"),deleteData:sinon.stub().returns("deleted data")};g={addData:sinon.spy(),deleteData:sinon.spy(),cycle:sinon.spy()};h=new e(i,j,g);f.ok(i.on.calledTwice,"source on change and delete");c.From(i.on.args).Single(function(k){return k[0]==="change"})[1]("id","type","data");f.ok(j.changeData.calledOnce,"store change data called");f.ok(j.changeData.args[0][0]==="id"&&j.changeData.args[0][1]==="type"&&j.changeData.args[0][2]==="data","correct data stored");f.ok(g.addData.calledOnce,"listener add data");f.ok(g.addData.args[0][0]===h);f.ok(g.addData.args[0][1]==="stored data");f.ok(g.cycle.calledOnce);c.From(i.on.args).Single(function(k){return k[0]==="delete"})[1]("id","type","data");f.ok(j.deleteData.calledOnce,"store delete data called");f.ok(j.deleteData.args[0][0]==="id"&&j.deleteData.args[0][1]==="type"&&j.deleteData.args[0][2]==="data","correct data delete");f.ok(g.deleteData.calledOnce,"listener delete data");f.ok(g.deleteData.args[0][0]===h);f.ok(g.deleteData.args[0][1]==="deleted data");return f.ok(g.cycle.calledTwice)}));QUnit.asyncTest("if no tokens require fetching source join is not called",sinon.test(function(f){var g,h,i,j,k;h={done:this.spy(),"catch":this.spy(),"finally":this.spy()};j={on:function(){},invoke:sinon.stub().returns(h)};k={mergeData:sinon.stub().returns("ok!!")};i=new e(j,k,"listener");g=i.retrieve(["token","token"]);f.ok(j.invoke.calledOnce,"source invoke not called");f.equal(j.invoke.args[0][0],"join","source  join");f.equal(j.invoke.args[0][2].length,0,"no joins");f.equal(j.invoke.args[0][3].length,0,"no collection joins");h.done.args[0][0]("result!");return g.done(function(l){f.equal(k.mergeData.args[0][0],"result!","data merged");f.equal(l,"ok!!");return QUnit.start()})}));QUnit.asyncTest("source join fails result",sinon.test(function(f){var g,h,i,j,k;this.clock.restore();h={done:this.spy(),"catch":this.spy()};j={on:function(){},invoke:sinon.stub().returns(h)};k={mergeData:sinon.stub().returns("ok!!")};i=new e(j,k,"listener");g=i.retrieve([]);g["catch"](function(){f.ok(!k.mergeData.called,"no data merged");return QUnit.start()});return setTimeout(function(){return h["catch"].args[0][0]("failed")},100)}));QUnit.test("joins called",sinon.test(function(f){var g,h,i,j;h={done:this.spy(),"catch":this.spy()};j={on:function(){},invoke:sinon.stub().returns(h)};i=new e(j,"store","listener");g=i.retrieve([{retrieveRequestMerge:function(){return"join1:"},collectionRetrieveRequestMerge:function(){return"collectionjoin1:"}},{retrieveRequestMerge:function(k){return k+"join2"},collectionRetrieveRequestMerge:function(k){return k+"collectionjoin2"}}]);f.ok(j.invoke.calledOnce,"source invoke not called");f.equal(j.invoke.args[0][0],"join","source  join");f.equal(j.invoke.args[0][2],"join1:join2","joins");return f.equal(j.invoke.args[0][3],"collectionjoin1:collectionjoin2","collection joins")}));QUnit.asyncTest("unlistens called",sinon.test(function(f){var g,h,i,j;h={done:this.spy(),"catch":this.spy(),"finally":this.spy()};j={on:function(){},invoke:sinon.stub().returns(h)};i=new e(j,"store","listener");g=i.unlisten("unlistens","collectionUnlistens");f.ok(j.invoke.calledOnce,"source invoke not called");f.equal(j.invoke.args[0][0],"leave","source  leave");f.equal(j.invoke.args[0][1],"unlistens","unlistens");f.equal(j.invoke.args[0][2],"collectionUnlistens","collectionUnlistens");h.done.args[0][0]("ok");return g.done(function(k){f.equal(k,"ok");return QUnit.start()})}));QUnit.asyncTest("unlistens called with fail",sinon.test(function(f){var g,h,i,j;h={done:this.spy(),"catch":this.spy(),"finally":this.spy()};j={on:function(){},invoke:sinon.stub().returns(h)};i=new e(j,"store","listener");g=i.unlisten("unlistens","collectionUnlistens");h["catch"].args[0][0]("nok");return g["catch"](function(k){f.equal(k,"nok");return QUnit.start()})}));QUnit.asyncTest("breezeRetrieve get",sinon.test(function(f){var g;this.server.restore();g=b("configuration").get([{ids:[{Id:"1",ParameterGroups:[{Name:"Root:Application:0",Parameters:[{Name:"id",Id:"id",Values:[{Name:"id",Value:"1"}]}]}]}],type:"Application"}]);g.done(function(h){f.ok(h[0].Type==="Application","application returned");f.ok(h.length===1);f.ok(h[0].Ids[0].Key===1);f.ok(h[0].Ids.length===1);f.ok(h[0].Ids[0].ParameterGroups.length===1);f.ok(h[0].Ids[0].ParameterGroups[0].Name==="Root:Application:0");f.ok(h[0].Ids[0].ParameterGroups[0].Value.length===1);f.ok(h[0].Ids[0].ParameterGroups[0].Value[0].Id()===1);f.ok(h[0].Ids[0].ParameterGroups[0].Value[0].Timestamp()==="AAAAAAAGgBo=");return QUnit.start()});return g["catch"](function(){f.ok(false,"retrieve failed");return QUnit.start()})}));QUnit.asyncTest("breezeRetrieve get collection",sinon.test(function(f){var g;this.server.restore();g=b("history").getCollection([{collections:[{collection:"Batches",ids:[{Id:1,IdProperty:"Id",ParameterGroups:[{Name:"Collection:HistoryZone:Batches:12",Parameters:[{Name:"id",Id:"id",Values:[{Name:"id",Value:1}]},{Name:"order",Id:"order",Values:[{Name:"propertyName",Value:"Id"},{Name:"isDescending",Value:false}]},{Name:"filter",Id:"filter",Values:[{Name:"property",Value:"Id"},{Name:"operator",Value:"<"},{Name:"value",Value:"22"}]},{Name:"page",Id:"page",Values:[{Name:"page",Value:"2"}]}]}]}]}],type:"HistoryZone"}]);g.done(function(h){f.ok(true);return QUnit.start()});return g["catch"](function(){f.ok(false,"retrieve failed");return QUnit.start()})}));QUnit.asyncTest("breezeRetrieve get collection int",sinon.test(function(f){var g,h;this.server.restore();this.clock.restore();g=[{collections:[{collection:"Batches",ids:[{Id:1,IdProperty:"Id",ParameterGroups:[{Name:"Collection:HistoryZone:Batches:12",Parameters:[{Name:"id",Id:"id",Values:[{Name:"id",Value:1}]},{Name:"order",Id:"order",Values:[{Name:"propertyName",Value:"Id"},{Name:"isDescending",Value:false}]},{Name:"filter",Id:"filter",Values:[{Name:"property",Value:"Id"},{Name:"operator",Value:"<"},{Name:"value",Value:"22"}]},{Name:"page",Id:"page",Values:[{Name:"page",Value:"2"}]}]}]}]}],type:"HistoryZone"}];h=b("history");return setInterval(function(){var i;return i=h.getCollection(g)},1000)}));QUnit.test("joins called1",sinon.test(function(f){var g,h,i,j,k;i={done:this.spy(),"catch":this.spy()};k={on:function(){},invoke:sinon.stub().returns(i)};j=new e(k,"store","listener");g=[{ids:[{Id:"1",ParameterGroups:[{Name:"Root:Application:0",Parameters:[{Name:"id",Id:"id",Values:[{Name:"id",Value:"1"}]}]}]}],type:"Application"}];h=j.retrieve([{retrieveRequestMerge:function(){return g}}]);f.ok(k.invoke.calledOnce,"source invoke not called");f.equal(k.invoke.args[0][0],"join","source  join");return f.equal(k.invoke.args[0][2],g,"joins")}));QUnit.asyncTest("a little breeze",function(f){var g,h,i,j;j="http://localhost:41374/breeze/configuration";h=new a.EntityManager(j);i=a.EntityQuery.from("Applications");g=h.executeQuery(i);g.done(function(k){f.ok("passed");return QUnit.start()});return g["catch"](function(){f.ok(false);return QUnit.start()})});return QUnit.test("colelction joins called1",sinon.test(function(f){var g,h,i,j,k,l;i={done:this.spy(),"catch":this.spy()};l={on:function(){},invoke:sinon.stub().returns(i)};j=new e(l,"store","listener");g=[{collections:[{collection:"Batches",ids:[{Id:1,IdProperty:"Id",ParameterGroups:[{Name:"Collection:HistoryZone:Batches:12",Parameters:[{Name:"id",Id:"id",Values:[{Name:"id",Value:1}]},{Name:"order",Id:"order",Values:[{Name:"propertyName",Value:"Id"},{Name:"isDescending",Value:false}]},{Name:"filter",Id:"filter",Values:[{Name:"property",Value:"Id"},{Name:"operator",Value:"<"},{Name:"value",Value:"22"}]},{Name:"page",Id:"page",Values:[{Name:"page",Value:"2"}]}]}]}]}],type:"HistoryZone"}];h=j.retrieve([{collectionRetrieveRequestMerge:function(){return g}}]);f.ok(l.invoke.calledOnce,"source invoke not called");f.equal(l.invoke.args[0][0],"join","source  join");f.equal(l.invoke.args[0][3],g,"collectionJoins");return k=[{Type:"HistoryZone",Ids:[],Collections:[{Collection:"Batches",Ids:[{Key:"1",ParameterGroups:[{Name:"Collection:HistoryZone:Batches:12",Collection:{data:[{ZoneId:1,Zone:null,FormulaId:1,FormulaPath:"Self Check.DRY_SC10:1.0.DRY_SC10:1.0",UnitProcedures:null,States:null,MyParentId:1,Commands:null,RuntimeId:1,Comment:null},"ConfigurationParentType",null,{ConfigurationParentId:1},{MyCommandId:null,MyCommand:null,Name:"newbatch"},"Description","Self Check Drying....bbb",{Timestamp:"AAAAAAACmRQ=",CreatedOn:"2014-03-04T01:40:26.88",ModifiedOn:"2014-07-25T01:50:49.75",UserIdCreated:null,Exceptions:[],Id:1}],metaData:{count:21}}}]}]}]}]}))})}).call(this);
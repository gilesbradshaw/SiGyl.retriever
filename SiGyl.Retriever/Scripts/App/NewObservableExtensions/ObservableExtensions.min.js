(function(){define(["knockout","Q","linq","utils","observableExtensions.listener"],function(c,f,d,h){var a,b,e,g;c.extenders.retrieve=function(j,i){j.retrieve=function(k){i.retrieve();return{retrieved:function(){return j}}};return j};c.extenders.order=function(j,i){j.order=function(k){c.utils.unwrapObservable(k);i.makeQuery(function(l){return""+l+" from order "+(c.utils.unwrapObservable(k))});return j};return j};c.extenders.base=function(j,i){j.base=j.any=function(k){c.utils.unwrapObservable(k);i.clearQuery();i.makeQuery(function(l){return""+l+" from base "+(c.utils.unwrapObservable(k))});return j};return j};b=function(r,m,k,s){var l,n,o,p,q,i,j;p=f.defer();q=p.promise;j=[];i=[];n=void 0;o=f.defer();l=c.observableArray().extend({listener:{subscribeActions:function(){var t;t=void 0;return{onSubscribe:function(){var u;u=j.reduce((function(w,v){return v(w)}),"initialQuery");return g.subscriber(r()).then(function(v){p.resolve();return t=v().subscribe(function(w){if(n){return n.push(w)}else{return m(l,[w])}})})},onDispose:function(){if(t){return t.dispose()}}}}}});return{data:l,clearQuery:function(){j=[];if(k){return j.push(k())}},makeQuery:function(t){return j.push(t)},makeMergeFunc:function(t){return i.push(t)},retrieve:function(){n=[];return q.then(function(){var t;t=j.reduce((function(v,u){return u(v)}),k());return s.executeQuery(t).then(function(u){m(l,u.results,n);return n=void 0})})}}};e={testManyObservable:function(i){return function(){var j;j=b(function(){return i},function(k,l){return k.push(l)});return{root:j.data.extend({base:{makeQuery:j.makeQuery,clearQuery:j.clearQuery},order:{makeQuery:j.makeQuery},retrieve:{retrieve:j.retrieve}})}}},rootObservable:function(i,j){return function(){var k,l;l=a.getType(j);k=b(function(){return""+j+":"+i},function(m,o,p){var n;if(o&&o.length){n=l.store.mergeData(j,o[o.length-1])}if(p&&p.length){n=l.store.mergeData(j,p[o.length-1])}return m(n)},function(){var m;m=l.query;m=m.where("Id","==",i);return m},l);return{root:k.data.extend({retrieve:{retrieve:k.retrieve}})}}}};g=void 0;a=void 0;return{getMe:function(){return e},initMe:function(){var i;i=f.defer();require(["breezeEntityManagers"],function(j){return j.getMe().then(function(k){a=k;return require(["retriever"],function(l){g=l.getMe();return i.resolve()})})});return i.promise}}})}).call(this);
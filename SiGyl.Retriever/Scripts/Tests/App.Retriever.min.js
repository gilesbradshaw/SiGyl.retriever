(function(){var a;requirejs.config({baseUrl:"../scripts",map:{"*":{ko:"knockout"}},shim:{breeze:["Q","jquery","knockout"],sinonie:["sinon"]},paths:{linq:"linqjs-amd",sinon:"sinon-1.10.3",sinonie:"sinon-ie-1.10.3",Q:"q",jquery:"jquery-2.1.1",retriever:"app/retriever",breeze:"breeze.debug",knockout:"knockout-3.2.0.debug",breezeretriever:"App/BreezeRetriever",breezeEntityManagers:"App/BreezeEntityManagers",store:"App/store",b64:"App/b64",source:"App/Source",observableExtensions:"app/observableExtensions",configurationMetaData:"tests/metaData/configuration",runtimeMetaData:"tests/metaData/runtime",historyMetaData:"tests/metaData/history"}});a={deleteData:function(){},addData:function(){},cycle:function(){}};define("listener",[],function(){return{getMe:function(){return a}}});require(["linq","retriever","Q","breezeretriever","listener","source","configurationMetaData","runtimeMetaData","historyMetaData","sinon","sinonie"],function(e,h,g,b,f,j,c,i,d){QUnit.test("check linq",function(k){return k.ok(e,"linq installed")});QUnit.test("check sinon",function(k){return k.ok(sinon,"sinon installed")});QUnit.asyncTest("if no tokens require fetching source join is not called",sinon.test(function(k){var l,m,n,o,p,q;n={done:this.spy(),"catch":this.spy(),"finally":this.spy()};p={on:function(){},invoke:sinon.stub().returns(n)};this.stub(j,"getMe",function(){return p});l={get:g.defer(),getCollection:g.defer()};q={get:this.stub().returns(l.get.promise),getCollection:this.stub().returns(l.getCollection.promise)};this.stub(b,"getMe",function(){return q});o=h.getMe();m=o.retrieve(["token","token"]);k.ok(p.invoke.calledOnce,"source invoke called");k.equal(p.invoke.args[0][0],"join","source  join");k.equal(p.invoke.args[0][2].length,0,"no joins");k.equal(p.invoke.args[0][3].length,0,"no collection joins");n.done.args[0][0]("result!");k.ok(b.getMe().get.calledOnce,"breezeRetiever get called");k.ok(b.getMe().getCollection.calledOnce,"breezeRetiever getCollection called");m.done(function(r){k.equal(r.length,0);return QUnit.start()});l.get.resolve([]);return l.getCollection.resolve([])}));QUnit.asyncTest("source join fails result",sinon.test(function(k){var l,m,n,o;this.clock.restore();m={done:this.spy(),"catch":this.spy(),yup:"!yup"};o={on:function(){},invoke:sinon.stub().returns(m)};this.stub(j,"getMe",function(){return o});n=h.getMe();l=n.retrieve([]);l["catch"](function(){k.ok(true);return QUnit.start()});return setTimeout(function(){return m["catch"].args[0][0]("failed")},100)}));QUnit.test("joins called",sinon.test(function(k){var l,m,n,o;m={done:this.spy(),"catch":this.spy()};o={on:function(){},invoke:sinon.stub().returns(m)};this.stub(j,"getMe",function(){return o});n=h.getMe();l=n.retrieve([{retrieveRequestMerge:function(){return"join1:"},collectionRetrieveRequestMerge:function(){return"collectionjoin1:"}},{retrieveRequestMerge:function(p){return p+"join2"},collectionRetrieveRequestMerge:function(p){return p+"collectionjoin2"}}]);k.ok(o.invoke.calledOnce,"source invoke not called");k.equal(o.invoke.args[0][0],"join","source  join");k.equal(o.invoke.args[0][2],"join1:join2","joins");return k.equal(o.invoke.args[0][3],"collectionjoin1:collectionjoin2","collection joins")}));QUnit.asyncTest("unlistens called",sinon.test(function(k){var l,m,n,o;m={done:this.spy(),"catch":this.spy(),"finally":this.spy()};o={on:function(){},invoke:sinon.stub().returns(m)};this.stub(j,"getMe",function(){return o});n=h.getMe();l=n.unlisten("unlistens","collectionUnlistens");k.ok(o.invoke.calledOnce,"source invoke not called");k.equal(o.invoke.args[0][0],"leave","source  leave");k.equal(o.invoke.args[0][1],"unlistens","unlistens");k.equal(o.invoke.args[0][2],"collectionUnlistens","collectionUnlistens");m.done.args[0][0]("ok");return l.done(function(p){k.equal(p,"ok");return QUnit.start()})}));QUnit.asyncTest("unlistens called with fail",sinon.test(function(k){var l,m,n,o;m={done:this.spy(),"catch":this.spy(),"finally":this.spy()};o={on:function(){},invoke:sinon.stub().returns(m)};this.stub(j,"getMe",function(){return o});n=h.getMe();l=n.unlisten("unlistens","collectionUnlistens");m["catch"].args[0][0]("nok");return l["catch"](function(p){k.equal(p,"nok");return QUnit.start()})}));QUnit.test("joins called1",sinon.test(function(k){var l,m,n,o,p;n={done:this.spy(),"catch":this.spy()};p={on:function(){},invoke:sinon.stub().returns(n)};this.stub(j,"getMe",function(){return p});o=h.getMe();l=[{ids:[{Id:"1",ParameterGroups:[{Name:"Root:Application:0",Parameters:[{Name:"id",Id:"id",Values:[{Name:"id",Value:"1"}]}]}]}],type:"Application"}];m=o.retrieve([{retrieveRequestMerge:function(){return l}}]);k.ok(p.invoke.calledOnce,"source invoke not called");k.equal(p.invoke.args[0][0],"join","source  join");return k.equal(p.invoke.args[0][2],l,"joins")}));return QUnit.test("collection joins called1",sinon.test(function(k){var l,m,n,o,p,q;n={done:this.spy(),"catch":this.spy()};q={on:function(){},invoke:sinon.stub().returns(n)};this.stub(j,"getMe",function(){return q});o=h.getMe();l=[{collections:[{collection:"Batches",ids:[{Id:1,IdProperty:"Id",ParameterGroups:[{Name:"Collection:HistoryZone:Batches:12",Parameters:[{Name:"id",Id:"id",Values:[{Name:"id",Value:1}]},{Name:"order",Id:"order",Values:[{Name:"propertyName",Value:"Id"},{Name:"isDescending",Value:false}]},{Name:"filter",Id:"filter",Values:[{Name:"property",Value:"Id"},{Name:"operator",Value:"<"},{Name:"value",Value:"22"}]},{Name:"page",Id:"page",Values:[{Name:"page",Value:"2"}]}]}]}]}],type:"HistoryZone"}];m=o.retrieve([{collectionRetrieveRequestMerge:function(){return l}}]);k.ok(q.invoke.calledOnce,"source invoke not called");k.equal(q.invoke.args[0][0],"join","source  join");k.equal(q.invoke.args[0][3],l,"collectionJoins");return p=[{Type:"HistoryZone",Ids:[],Collections:[{Collection:"Batches",Ids:[{Key:"1",ParameterGroups:[{Name:"Collection:HistoryZone:Batches:12",Collection:{data:[{ZoneId:1,Zone:null,FormulaId:1,FormulaPath:"Self Check.DRY_SC10:1.0.DRY_SC10:1.0",UnitProcedures:null,States:null,MyParentId:1,Commands:null,RuntimeId:1,Comment:null},"ConfigurationParentType",null,{ConfigurationParentId:1},{MyCommandId:null,MyCommand:null,Name:"newbatch"},"Description","Self Check Drying....bbb",{Timestamp:"AAAAAAACmRQ=",CreatedOn:"2014-03-04T01:40:26.88",ModifiedOn:"2014-07-25T01:50:49.75",UserIdCreated:null,Exceptions:[],Id:1}],metaData:{count:21}}}]}]}]}]}))})}).call(this);
(function(){requirejs.config({baseUrl:"../scripts",map:{"*":{ko:"knockout"}},shim:{breeze:["Q","jquery","knockout"],sinonie:["sinon"]},paths:{linq:"linqjs-amd",sinon:"sinon-1.10.3",sinonie:"sinon-ie-1.10.3",Q:"q",jquery:"jquery-2.1.1",retriever:"app/retriever",breeze:"breeze.debug",knockout:"knockout-3.2.0.debug",breezeretriever:"App/BreezeRetriever",breezeEntityManagers:"App/BreezeEntityManagers",store:"App/store",b64:"App/b64",listener:"App/Listener",source:"App/Source",storeTemp:"App/storeTemp",observableExtensions:"app/observableExtensions",configurationMetaData:"App/metaData/configuration",runtimeMetaData:"App/metaData/runtime",historyMetaData:"App/metaData/history"}});require(["linq","retriever","Q","breezeretriever","listener","source","storeTemp","configurationMetaData","runtimeMetaData","historyMetaData","sinon","sinonie"],function(d,g,f,a,e,i,j,b,h,c){QUnit.test("check linq",function(k){return k.ok(d,"linq installed")});QUnit.test("check sinon",function(k){return k.ok(sinon,"sinon installed")});QUnit.asyncTest("if no tokens require fetching source join is not called",sinon.test(function(k){var l,m,n,o,p,q;n={done:this.spy(),"catch":this.spy(),"finally":this.spy()};p={on:function(){},invoke:sinon.stub().returns(n)};this.stub(i,"getMe",function(){return p});l={get:f.defer(),getCollection:f.defer()};q={get:this.stub().returns(l.get.promise),getCollection:this.stub().returns(l.getCollection.promise)};this.stub(a,"getMe",function(){return q});o=g.getMe();m=o.retrieve(["token","token"]);k.ok(p.invoke.calledOnce,"source invoke called");k.equal(p.invoke.args[0][0],"join","source  join");k.equal(p.invoke.args[0][2].length,0,"no joins");k.equal(p.invoke.args[0][3].length,0,"no collection joins");n.done.args[0][0]("result!");k.ok(a.getMe().get.calledOnce,"breezeRetiever get called");k.ok(a.getMe().getCollection.calledOnce,"breezeRetiever getCollection called");m.done(function(r){k.equal(r.length,0);return QUnit.start()});l.get.resolve([]);return l.getCollection.resolve([])}));QUnit.asyncTest("source join fails result",sinon.test(function(k){var l,m,n,o,p;this.clock.restore();m={done:this.spy(),"catch":this.spy(),yup:"!yup"};o={on:function(){},invoke:sinon.stub().returns(m)};this.stub(i,"getMe",function(){return o});p={mergeData:sinon.stub().returns("ok!!")};this.stub(j,"getMe",function(){return p});n=g.getMe();l=n.retrieve([]);l["catch"](function(){k.ok(!p.mergeData.called,"no data merged");return QUnit.start()});return setTimeout(function(){return m["catch"].args[0][0]("failed")},100)}));QUnit.test("joins called",sinon.test(function(k){var l,m,n,o;m={done:this.spy(),"catch":this.spy()};o={on:function(){},invoke:sinon.stub().returns(m)};this.stub(i,"getMe",function(){return o});n=g.getMe();l=n.retrieve([{retrieveRequestMerge:function(){return"join1:"},collectionRetrieveRequestMerge:function(){return"collectionjoin1:"}},{retrieveRequestMerge:function(p){return p+"join2"},collectionRetrieveRequestMerge:function(p){return p+"collectionjoin2"}}]);k.ok(o.invoke.calledOnce,"source invoke not called");k.equal(o.invoke.args[0][0],"join","source  join");k.equal(o.invoke.args[0][2],"join1:join2","joins");return k.equal(o.invoke.args[0][3],"collectionjoin1:collectionjoin2","collection joins")}));QUnit.asyncTest("unlistens called",sinon.test(function(k){var l,m,n,o;m={done:this.spy(),"catch":this.spy(),"finally":this.spy()};o={on:function(){},invoke:sinon.stub().returns(m)};this.stub(i,"getMe",function(){return o});n=g.getMe();l=n.unlisten("unlistens","collectionUnlistens");k.ok(o.invoke.calledOnce,"source invoke not called");k.equal(o.invoke.args[0][0],"leave","source  leave");k.equal(o.invoke.args[0][1],"unlistens","unlistens");k.equal(o.invoke.args[0][2],"collectionUnlistens","collectionUnlistens");m.done.args[0][0]("ok");return l.done(function(p){k.equal(p,"ok");return QUnit.start()})}));QUnit.asyncTest("unlistens called with fail",sinon.test(function(k){var l,m,n,o;m={done:this.spy(),"catch":this.spy(),"finally":this.spy()};o={on:function(){},invoke:sinon.stub().returns(m)};this.stub(i,"getMe",function(){return o});n=g.getMe();l=n.unlisten("unlistens","collectionUnlistens");m["catch"].args[0][0]("nok");return l["catch"](function(p){k.equal(p,"nok");return QUnit.start()})}));QUnit.asyncTest("breezeRetrieve get",function(k){var l,m;m=sinon.fakeServer.create();a.initMe(["http://localhost:41374/breeze/configuration"]);m.respondWith("GET","http://localhost:41374/breeze/configuration/Metadata",JSON.stringify(b.getMe()));m.respond();m.respondWith("GET","http://localhost:41374/breeze/configuration/Applications?$filter=Id%20eq%201",'[{"$id":"1","$type":"SiGyl.Models.Areas.Configuration.Sys.Application, SiGyl.Models.Areas.Configuration","Enterprises":null,"MyParentId":null,"Name":"7","Description":"e","Timestamp":{"$type":"System.Byte[], mscorlib","$value":"AAAAAAAGj7E="},"CreatedOn":"2012-11-27T14:39:17.217","ModifiedOn":"2014-08-23T00:24:55.067","UserIdCreated":null,"Exceptions":[],"Id":1}]');l=a.getMe().get([{ids:[{Id:"1",ParameterGroups:[{Name:"Root:Application:0",Parameters:[{Name:"id",Id:"id",Values:[{Name:"id",Value:"1"}]}]}]}],type:"Application"}]);l.done(function(n){k.ok(n[0].Type==="Application","application returned");k.ok(n.length===1);k.ok(n[0].Ids[0].Key===1);k.ok(n[0].Ids.length===1);k.ok(n[0].Ids[0].ParameterGroups.length===1);k.ok(n[0].Ids[0].ParameterGroups[0].Name==="Root:Application:0");k.ok(n[0].Ids[0].ParameterGroups[0].Value.length===1);k.ok(n[0].Ids[0].ParameterGroups[0].Value[0].Id()===1);k.ok(n[0].Ids[0].ParameterGroups[0].Value[0].Timestamp()==="AAAAAAAGj7E=");m.restore();return QUnit.start()});l["catch"](function(){k.ok(false,"retrieve failed");m.restore();return QUnit.start()});return setTimeout(function(){return m.respond()},100)});QUnit.asyncTest("breezeRetrieve get collection",function(k){var l,m;m=sinon.fakeServer.create();a.initMe(["http://localhost:41374/breeze/history"]);m.respondWith("GET","http://localhost:41374/breeze/history/Metadata",JSON.stringify(c.getMe()));m.respond();m.respondWith("GET","http://localhost:41374/breeze/history/Batches?$filter=(ZoneId%20eq%201)%20and%20(Id%20lt%2022)&$orderby=Id&$skip=20&$top=10&$inlinecount=allpages",'{"$id":"1","$type":"Breeze.WebApi2.QueryResult, Breeze.WebApi2","Results":[{"$id":"2","$type":"SiGyl.Models.Areas.History.Batches.HistoryBatch, SiGyl.Models.Areas.History","ZoneId":1,"Zone":null,"FormulaId":1,"FormulaPath":"Self Check.DRY_SC10:1.0.DRY_SC10:1.0","UnitProcedures":null,"States":null,"MyParentId":1,"Commands":null,"RuntimeId":21,"Comment":null,"ConfigurationParentType":null,"ConfigurationParentId":1,"MyCommandId":null,"MyCommand":null,"Name":"gggg","Description":"Self Check Drying....bbb","Timestamp":{"$type":"System.Byte[], mscorlib","$value":"AAAAAAACIjk="},"CreatedOn":"2014-08-19T22:15:36.543","ModifiedOn":"2014-08-19T22:15:36.517","UserIdCreated":null,"Exceptions":[],"Id":21}],"InlineCount":21}');l=a.getMe().getCollection([{collections:[{collection:"Batches",ids:[{Id:1,IdProperty:"Id",ParameterGroups:[{Name:"Collection:HistoryZone:Batches:12",Parameters:[{Name:"id",Id:"id",Values:[{Name:"id",Value:1}]},{Name:"order",Id:"order",Values:[{Name:"propertyName",Value:"Id"},{Name:"isDescending",Value:false}]},{Name:"filter",Id:"filter",Values:[{Name:"property",Value:"Id"},{Name:"operator",Value:"<"},{Name:"value",Value:"22"}]},{Name:"page",Id:"page",Values:[{Name:"page",Value:"2"}]}]}]}]}],type:"HistoryZone"}]);l.done(function(n){k.ok(true);m.restore();return QUnit.start()});l["catch"](function(){k.ok(false,"retrieve failed");m.restore();return QUnit.start()});return setTimeout(function(){return m.respond()},100)});QUnit.test("joins called1",sinon.test(function(k){var l,m,n,o,p;n={done:this.spy(),"catch":this.spy()};p={on:function(){},invoke:sinon.stub().returns(n)};this.stub(i,"getMe",function(){return p});o=g.getMe();l=[{ids:[{Id:"1",ParameterGroups:[{Name:"Root:Application:0",Parameters:[{Name:"id",Id:"id",Values:[{Name:"id",Value:"1"}]}]}]}],type:"Application"}];m=o.retrieve([{retrieveRequestMerge:function(){return l}}]);k.ok(p.invoke.calledOnce,"source invoke not called");k.equal(p.invoke.args[0][0],"join","source  join");return k.equal(p.invoke.args[0][2],l,"joins")}));return QUnit.test("collection joins called1",sinon.test(function(k){var l,m,n,o,p,q;n={done:this.spy(),"catch":this.spy()};q={on:function(){},invoke:sinon.stub().returns(n)};this.stub(i,"getMe",function(){return q});o=g.getMe();l=[{collections:[{collection:"Batches",ids:[{Id:1,IdProperty:"Id",ParameterGroups:[{Name:"Collection:HistoryZone:Batches:12",Parameters:[{Name:"id",Id:"id",Values:[{Name:"id",Value:1}]},{Name:"order",Id:"order",Values:[{Name:"propertyName",Value:"Id"},{Name:"isDescending",Value:false}]},{Name:"filter",Id:"filter",Values:[{Name:"property",Value:"Id"},{Name:"operator",Value:"<"},{Name:"value",Value:"22"}]},{Name:"page",Id:"page",Values:[{Name:"page",Value:"2"}]}]}]}]}],type:"HistoryZone"}];m=o.retrieve([{collectionRetrieveRequestMerge:function(){return l}}]);k.ok(q.invoke.calledOnce,"source invoke not called");k.equal(q.invoke.args[0][0],"join","source  join");k.equal(q.invoke.args[0][3],l,"collectionJoins");return p=[{Type:"HistoryZone",Ids:[],Collections:[{Collection:"Batches",Ids:[{Key:"1",ParameterGroups:[{Name:"Collection:HistoryZone:Batches:12",Collection:{data:[{ZoneId:1,Zone:null,FormulaId:1,FormulaPath:"Self Check.DRY_SC10:1.0.DRY_SC10:1.0",UnitProcedures:null,States:null,MyParentId:1,Commands:null,RuntimeId:1,Comment:null},"ConfigurationParentType",null,{ConfigurationParentId:1},{MyCommandId:null,MyCommand:null,Name:"newbatch"},"Description","Self Check Drying....bbb",{Timestamp:"AAAAAAACmRQ=",CreatedOn:"2014-03-04T01:40:26.88",ModifiedOn:"2014-07-25T01:50:49.75",UserIdCreated:null,Exceptions:[],Id:1}],metaData:{count:21}}}]}]}]}]}))})}).call(this);
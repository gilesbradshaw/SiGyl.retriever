(function(){requirejs.config({baseUrl:"../scripts",map:{"*":{ko:"knockout"}},shim:{breeze:["Q","jquery","knockout"],sinonie:["sinon"],sigr:["jquery"]},paths:{rx:"rx/rx","rx.binding":"rx/rx.binding",linq:"linqjs-amd",sinon:"sinon-1.10.3",sinonie:"sinon-ie-1.10.3",Q:"q",jquery:"jquery-2.1.1",breeze:"breeze.debug",knockout:"knockout-3.2.0.debug","knockout.punches":"knockout.punches",observableExtensions:"app/newobservableExtensions/observableExtensions","observableExtensions.listener":"App/ObservableExtensions/listener"}});require(["rx","Q","rx.binding"],function(d,a){var c,b;c={};b={subscriber:function(f){var e;if(!c[f]){e=d.Observable.create(function(g){c[f].observer=g;return function(){return delete c[f]}});c[f]={subject:e,share:e.share(),subscriptionDeferred:a.defer()};setTimeout(function(){if(c[f]){return c[f].subscriptionDeferred.resolve(c[f].share)}},1)}return c[f].subscriptionDeferred.promise},retrieve:function(f){var e;e=a.defer();setTimeout(function(){return e.resolve(["retrieve returns data for "+f])},10);return e.promise}};define("retriever",[],function(){return{getMe:function(){return b},initMe:function(){return a()}}});return require(["linq","knockout","observableExtensions","knockout.punches","sinon","sinonie","retriever"],function(h,g,i,e,j,f,k){g.punches.enableAll();QUnit.asyncTest("check linq",function(l){var m,n,o,p;p=sinon.sandbox.create();m=p.useFakeTimers();n=[];o=0;p.spy(b,"subscriber");p.spy(b,"retrieve");i.initMe().then(function(){var q;q=i.getMe().manyObservable("rsub")().root.base("base!!!").order("order!!!!!!!!").retrieve().retrieved().subscribe(function(r){return n=r});l.ok(n.length===0,"no data received yet");l.ok(b.subscriber.calledOnce,"we have subscribed to the retriever");l.equal(b.subscriber.args[0][0],"rsub","we've subscribed to the rsub definition");l.ok(!b.retrieve.called,"we have not yet retrieved from the retriever");m.tick(1);m.restore();setTimeout(function(){m=p.useFakeTimers();l.ok(b.retrieve.calledOnce,"we have called retrieve on the retriever");l.equal(b.retrieve.args[0][0],"initialQuery from base base!!! from order order!!!!!!!!","query passed to retriever");l.ok(n.length===0,"still no data");m.tick(20);c.rsub.observer.onNext("yabba 1");c.rsub.observer.onNext("yabba 2");m.restore();return setTimeout(function(){m=p.useFakeTimers();l.ok(n.length===3,"data");l.ok(n[0]==="retrieve returns data for initialQuery from base base!!! from order order!!!!!!!!","received data applied");l.ok(n[1]==="yabba 1","published data applied");l.ok(n[2]==="yabba 2","published data applied");p.restore();return QUnit.start()},20)},1);return;return setTimeout(function(){c.rsub.observer.onNext("yabadabadaba");subscription2.dispose();c.rsub.observer.onNext("yabfevadabadaba");q.dispose();l.ok(n===3);l.ok(o===2);l.ok(c.rsub===void 0);return QUnit.start()},1000)});return m.tick(4)});QUnit.asyncTest("rsub",function(l){return i.manyObservable("rsub").base("ok").order("ok2").subscribe(function(){})});return QUnit.asyncTest("bind to dom",function(l){var m;m=0;setInterval(function(){if(c.rsub&&c.rsub.observer){return c.rsub.observer.onNext("yabadabadaba "+(m++))}},1000);return g.applyBindings({base1:g.observable("base1"),base2:g.observable("base2"),order1:g.observable("order1"),order2:g.observable("order2"),sub1:i.manyObservable("rsub"),sub2:i.manyObservable("rsub")})})})})}).call(this);